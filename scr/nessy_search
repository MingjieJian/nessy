#!/bin/bash

if [ $(hostname) == "ph-rtagirov" ]; then NESSY_DIR=/mnt/SSD/sim/nessy; fi
if [ $(hostname) == "schiphol" ];    then NESSY_DIR=~/nessy;            fi

src=$NESSY_DIR/src
scr=$NESSY_DIR/scr

source $scr/aux_func.sh

function identify_src
{
if [ -z "$1" ]; then break; fi

if [ ! -z "$(echo "$1" | grep '.for')" ]; then

   if [ "$(echo "$1" | awk '{print substr($0,length,1)}')" == "\\" ]; then

      SRC=$(echo "$1" | rev | cut -c 2- | rev) 

   else

      SRC=$1

   fi

   for NAME in $SRCS; do if [ "$NAME" == "$SRC" ]; then continue 2; fi; done

   SRCS=$SRCS' '$SRC

fi
}

function cpl_src_list
{
while read -r LINE; do identify_src $LINE; done < "$1"
}

if [ -z $3 ];                    then GREP='grep -iw --color'; fi
if [ ! -z $3 ] && [ $3 == "-e" ]; then GREP='grep -iw --color --exclude='$1.for; fi

if [ ! -z $3 ] && [ $3 != "-e" ]; then abort "The third argument is not understood."; fi

MAKE_DIR=$src/make
NESSY_SRCS=$MAKE_DIR/Makefile.sources
NESSY_SRCS_REV=$MAKE_DIR/Makefile.sources.rev

if [ -z "$1" ]; then abort "The search string has not been provided."; fi

if [ ! -z "$2" ]; then

   if [ "$2" == "h" ]; then SEARCH_HMINUS=Yes; fi
   if [ "$2" == "f" ]; then SEARCH_FIOSS=Yes;  fi
   if [ "$2" == "n" ]; then SEARCH_NESSY=Yes;  fi

   if [ "$2" != "h" ] && [ "$2" != "f" ] && [ $2 != "n" ]; then abort "The second argument is not understood."; fi

else

   SEARCH_NESSY=Yes

fi

SRCS=''

if [ $SEARCH_NESSY ];  then cpl_src_list $NESSY_SRCS; tail -r $NESSY_SRCS > $NESSY_SRCS_REV; cpl_src_list $NESSY_SRCS_REV; fi

if [ $SEARCH_HMINUS ]; then tail -r $NESSY_SRCS > $NESSY_SRCS_REV; cpl_src_list $NESSY_SRCS_REV; fi

if [ $SEARCH_FIOSS ];  then cpl_src_list $NESSY_SRCS; fi

if [ -z $3 ]; then cd $src; $GREP "$1" $SRCS; fi

if [ ! -z $3 ]; then cd $src; $GREP "$1" $SRCS | grep -iw --color call; fi

rm -f $NESSY_SRCS_REV
